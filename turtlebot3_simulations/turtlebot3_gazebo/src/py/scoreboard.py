#!/usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 01, 2019 07:16:11 PM +07  platform: Windows NT

import sys
import rospy
from turtlebot3_msgs.msg import Score

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

#import unknown_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    #unknown_support.set_Tk_var()
    top = Toplevel1 (root)
    #unknown_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    #unknown_support.set_Tk_var()
    top = Toplevel1 (w)
    #unknown_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font12 = "-family {Cascadia Code} -size 36 -weight normal "  \
            "-slant roman -underline 0 -overstrike 0"

        top.geometry("560x450+699+113")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("Scoreboard")
        top.configure(background="#d9d9d9")
        top.configure(highlightcolor="#646464646464")

        rospy.Subscriber('/score', Score, self.updateScore)
        self.score = [tk.StringVar() for x in range(8)]
	for i in range(8):
	    self.score[i].set("0")

        self.black = tk.Frame(top)
        self.black.place(relx=0.0, rely=0.0, relheight=0.3, relwidth=0.241)
        self.black.configure(relief='groove')
        self.black.configure(borderwidth="2")
        self.black.configure(relief="groove")
        self.black.configure(background="#d9d9d9")

        self.Label1 = tk.Label(self.black)
        self.Label1.place(relx=0.296, rely=0.074, height=26, width=50)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''BLACK''')

        self.score_black = tk.Label(self.black)
        self.score_black.place(relx=0.296, rely=0.444, height=56, width=52)
        self.score_black.configure(background="#d9d9d9")
        self.score_black.configure(disabledforeground="#a3a3a3")
        self.score_black.configure(font=font12)
        self.score_black.configure(foreground="#000000")
        self.score_black.configure(text='''0''')
        self.score_black.configure(textvariable=self.score[0])

        self.blue = tk.Frame(top)
        self.blue.place(relx=0.25, rely=0.0, relheight=0.3, relwidth=0.241)
        self.blue.configure(relief='groove')
        self.blue.configure(borderwidth="2")
        self.blue.configure(relief="groove")
        self.blue.configure(background="#d9d9d9")
        self.blue.configure(highlightbackground="#d9d9d9")
        self.blue.configure(highlightcolor="black")

        self.Label2 = tk.Label(self.blue)
        self.Label2.place(relx=0.333, rely=0.074, height=26, width=41)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''BLUE''')

        self.score_blue = tk.Label(self.blue)
        self.score_blue.place(relx=0.296, rely=0.444, height=56, width=52)
        self.score_blue.configure(activebackground="#f9f9f9")
        self.score_blue.configure(activeforeground="black")
        self.score_blue.configure(background="#d9d9d9")
        self.score_blue.configure(disabledforeground="#a3a3a3")
        self.score_blue.configure(font="-family {Cascadia Code} -size 36")
        self.score_blue.configure(foreground="#000000")
        self.score_blue.configure(highlightbackground="#d9d9d9")
        self.score_blue.configure(highlightcolor="black")
        self.score_blue.configure(text='''0''')
        self.score_blue.configure(textvariable=self.score[1])

        self.green = tk.Frame(top)
        self.green.place(relx=0.5, rely=0.0, relheight=0.3, relwidth=0.241)
        self.green.configure(relief='groove')
        self.green.configure(borderwidth="2")
        self.green.configure(relief="groove")
        self.green.configure(background="#d9d9d9")
        self.green.configure(highlightbackground="#d9d9d9")
        self.green.configure(highlightcolor="black")

        self.Label3 = tk.Label(self.green)
        self.Label3.place(relx=0.296, rely=0.074, height=26, width=50)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''GREEN''')

        self.score_green = tk.Label(self.green)
        self.score_green.place(relx=0.296, rely=0.444, height=56, width=52)
        self.score_green.configure(activebackground="#f9f9f9")
        self.score_green.configure(activeforeground="black")
        self.score_green.configure(background="#d9d9d9")
        self.score_green.configure(disabledforeground="#a3a3a3")
        self.score_green.configure(font="-family {Cascadia Code} -size 36")
        self.score_green.configure(foreground="#000000")
        self.score_green.configure(highlightbackground="#d9d9d9")
        self.score_green.configure(highlightcolor="black")
        self.score_green.configure(text='''0''')
        self.score_green.configure(textvariable=self.score[2])

        self.orange = tk.Frame(top)
        self.orange.place(relx=0.75, rely=0.0, relheight=0.3, relwidth=0.241)
        self.orange.configure(relief='groove')
        self.orange.configure(borderwidth="2")
        self.orange.configure(relief="groove")
        self.orange.configure(background="#d9d9d9")
        self.orange.configure(highlightbackground="#d9d9d9")
        self.orange.configure(highlightcolor="black")

        self.Label4 = tk.Label(self.orange)
        self.Label4.place(relx=0.222, rely=0.074, height=26, width=71)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''ORANGE''')

        self.score_orange = tk.Label(self.orange)
        self.score_orange.place(relx=0.296, rely=0.444, height=56, width=52)
        self.score_orange.configure(activebackground="#f9f9f9")
        self.score_orange.configure(activeforeground="black")
        self.score_orange.configure(background="#d9d9d9")
        self.score_orange.configure(disabledforeground="#a3a3a3")
        self.score_orange.configure(font="-family {Cascadia Code} -size 36")
        self.score_orange.configure(foreground="#000000")
        self.score_orange.configure(highlightbackground="#d9d9d9")
        self.score_orange.configure(highlightcolor="black")
        self.score_orange.configure(text='''0''')
        self.score_orange.configure(textvariable=self.score[3])

        self.purple = tk.Frame(top)
        self.purple.place(relx=0.0, rely=0.356, relheight=0.3, relwidth=0.241)
        self.purple.configure(relief='groove')
        self.purple.configure(borderwidth="2")
        self.purple.configure(relief="groove")
        self.purple.configure(background="#d9d9d9")
        self.purple.configure(highlightbackground="#d9d9d9")
        self.purple.configure(highlightcolor="black")

        self.Label5 = tk.Label(self.purple)
        self.Label5.place(relx=0.296, rely=0.074, height=26, width=61)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''PURPLE''')

        self.score_purple = tk.Label(self.purple)
        self.score_purple.place(relx=0.296, rely=0.444, height=56, width=52)
        self.score_purple.configure(activebackground="#f9f9f9")
        self.score_purple.configure(activeforeground="black")
        self.score_purple.configure(background="#d9d9d9")
        self.score_purple.configure(disabledforeground="#a3a3a3")
        self.score_purple.configure(font="-family {Cascadia Code} -size 36")
        self.score_purple.configure(foreground="#000000")
        self.score_purple.configure(highlightbackground="#d9d9d9")
        self.score_purple.configure(highlightcolor="black")
        self.score_purple.configure(text='''0''')
        self.score_purple.configure(textvariable=self.score[4])

        self.white = tk.Frame(top)
        self.white.place(relx=0.5, rely=0.356, relheight=0.3, relwidth=0.241)
        self.white.configure(relief='groove')
        self.white.configure(borderwidth="2")
        self.white.configure(relief="groove")
        self.white.configure(background="#d9d9d9")
        self.white.configure(highlightbackground="#d9d9d9")
        self.white.configure(highlightcolor="black")

        self.Label7 = tk.Label(self.white)
        self.Label7.place(relx=0.259, rely=0.074, height=26, width=61)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''WHITE''')

        self.score_white = tk.Label(self.white)
        self.score_white.place(relx=0.296, rely=0.444, height=56, width=52)
        self.score_white.configure(activebackground="#f9f9f9")
        self.score_white.configure(activeforeground="black")
        self.score_white.configure(background="#d9d9d9")
        self.score_white.configure(disabledforeground="#a3a3a3")
        self.score_white.configure(font="-family {Cascadia Code} -size 36")
        self.score_white.configure(foreground="#000000")
        self.score_white.configure(highlightbackground="#d9d9d9")
        self.score_white.configure(highlightcolor="black")
        self.score_white.configure(text='''0''')
        self.score_white.configure(textvariable=self.score[6])

        self.yellow = tk.Frame(top)
        self.yellow.place(relx=0.75, rely=0.356, relheight=0.3, relwidth=0.241)
        self.yellow.configure(relief='groove')
        self.yellow.configure(borderwidth="2")
        self.yellow.configure(relief="groove")
        self.yellow.configure(background="#d9d9d9")
        self.yellow.configure(highlightbackground="#d9d9d9")
        self.yellow.configure(highlightcolor="black")

        self.Label8 = tk.Label(self.yellow)
        self.Label8.place(relx=0.259, rely=0.074, height=26, width=61)
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="black")
        self.Label8.configure(text='''YELLOW''')

        self.score_yellow = tk.Label(self.yellow)
        self.score_yellow.place(relx=0.296, rely=0.444, height=56, width=52)
        self.score_yellow.configure(activebackground="#f9f9f9")
        self.score_yellow.configure(activeforeground="black")
        self.score_yellow.configure(background="#d9d9d9")
        self.score_yellow.configure(disabledforeground="#a3a3a3")
        self.score_yellow.configure(font="-family {Cascadia Code} -size 36")
        self.score_yellow.configure(foreground="#000000")
        self.score_yellow.configure(highlightbackground="#d9d9d9")
        self.score_yellow.configure(highlightcolor="black")
        self.score_yellow.configure(text='''0''')
        self.score_yellow.configure(textvariable=self.score[7])

        self.red = tk.Frame(top)
        self.red.place(relx=0.25, rely=0.356, relheight=0.3, relwidth=0.241)
        self.red.configure(relief='groove')
        self.red.configure(borderwidth="2")
        self.red.configure(relief="groove")
        self.red.configure(background="#d9d9d9")
        self.red.configure(highlightbackground="#d9d9d9")
        self.red.configure(highlightcolor="black")

        self.Label6 = tk.Label(self.red)
        self.Label6.place(relx=0.259, rely=0.074, height=26, width=61)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''RED''')

        self.score_red = tk.Label(self.red)
        self.score_red.place(relx=0.296, rely=0.444, height=56, width=52)
        self.score_red.configure(activebackground="#f9f9f9")
        self.score_red.configure(activeforeground="black")
        self.score_red.configure(background="#d9d9d9")
        self.score_red.configure(disabledforeground="#a3a3a3")
        self.score_red.configure(font="-family {Cascadia Code} -size 36")
        self.score_red.configure(foreground="#000000")
        self.score_red.configure(highlightbackground="#d9d9d9")
        self.score_red.configure(highlightcolor="black")
        self.score_red.configure(text='''0''')
        self.score_red.configure(textvariable=self.score[5])

    def updateScore(self, msg):
        if msg.team == "Black":
            self.score[0].set(str(msg.score))
        elif msg.team == "Blue":
            self.score[1].set(str(msg.score))
        elif msg.team == "Green":
            self.score[2].set(str(msg.score))
        elif msg.team == "Orange":
            self.score[3].set(str(msg.score))
        elif msg.team == "Purple":
            self.score[4].set(str(msg.score))
        elif msg.team == "Red":
            self.score[5].set(str(msg.score))
        elif msg.team == "White":
            self.score[6].set(str(msg.score))
        elif msg.team == "Yellow":
            self.score[7].set(str(msg.score))


if __name__ == '__main__':
    rospy.init_node("scoreboard", anonymous=True)
    vp_start_gui()





